##
name: Docker
on:
  workflow_dispatch:

env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ secrets.DOCKER_USER }}/sd-test
  DF_DEBIAN: debian/Dockerfile
  DF_ALPINE: alpine/Dockerfile

jobs:
  build:
    strategy:
      matrix:
        pyver: [ "3.8", "3.10" ]
        debianver: [ bullseye ]
        alpinever: [ "3.17" ]
        checkout: [ master, v4.3 ]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      # https://github.com/docker/setup-buildx-action
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}
          
      # https://github.com/actions/checkout
      - name: Checkout repository
        uses: actions/checkout@v3

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker Debian image
        id: build-and-push-debian
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ${{ env.DF_DEBIAN }}
          build-args: |
            SD_TAG=${{ matrix.checkout }}
            PY_VER=${{ matrix.pyver }}
            DEBIAN_VER=${{ matrix.debianver }}
          push: ${{ github.event_name != 'pull_request' }}
          pull: true
          tags: ${{ env.IMAGE_NAME }}:${{ matrix.checkout }}-debian-${{ matrix.debianver }}-py${{ matrix.pyver }}
          cache-from: type=gha,scope=${{ matrix.checkout }}-debian-${{ matrix.debianver }}-py${{ matrix.pyver }}
          cache-to: type=gha,mode=max,scope=${{ matrix.checkout }}-debian-${{ matrix.debianver }}-py${{ matrix.pyver }}

      - name: Build and push Docker Alpine image
        id: build-and-push-alpine
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ${{ env.DF_ALPINE }}
          build-args: |
            SD_TAG=${{ matrix.checkout }}
            PY_VER=${{ matrix.pyver }}
            DEBIAN_VER=${{ matrix.alpinever }}
          push: ${{ github.event_name != 'pull_request' }}
          pull: true
          tags: ${{ env.IMAGE_NAME }}:${{ matrix.checkout }}-alpine-${{ matrix.alpinever }}-py${{ matrix.pyver }}
          cache-from: type=gha,scope=${{ matrix.checkout }}-alpine-${{ matrix.alpinever }}-py${{ matrix.pyver }}
          cache-to: type=gha,mode=max,scope=${{ matrix.checkout }}-alpine-${{ matrix.alpinever }}-py${{ matrix.pyver }}
